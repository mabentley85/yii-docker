name: Docker Image CI

on:
  workflow_dispatch:
  push:
  pull_request:
  schedule:
    - cron: '0 3 * * 0'

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
       include:
         #- php-base-image-version: "8.0-fpm"
         #  dockerfile-flavour: "debian"
         #  compose-file: "docker-compose.yml:docker-compose.fpm-nginx.yml"
         #- php-base-image-version: "8.0-apache"
         #  dockerfile-flavour: "debian"
         #- php-base-image-version: "8.1-fpm"
         #  dockerfile-flavour: "debian"
         #  compose-file: "docker-compose.yml:docker-compose.fpm-nginx.yml"
         #- php-base-image-version: "8.1-apache"
         #  dockerfile-flavour: "debian"
         - php-base-image-version: "8.2-fpm"
           dockerfile-flavour: "debian"
           compose-file: "docker-compose.yml:docker-compose.fpm-nginx.yml"
         #- php-base-image-version: "8.2-apache"
         #  dockerfile-flavour: "debian"
      fail-fast: false
    env:
      PHP_IMAGE_NAME: "yiisoftware/yii-php"
      PHP_BASE_IMAGE_VERSION: ${{ matrix.php-base-image-version }}
      DOCKERFILE_FLAVOUR: ${{ matrix.dockerfile-flavour }}
      COMPOSE_FILE: ${{ matrix.compose-file }}
    steps:
    - uses: actions/checkout@v1
    - name: Set version suffix
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "PHP_IMAGE_VERSION_SUFFIX=-${GITHUB_REF:10}" >> $GITHUB_ENV
    - name: Install
      env:
        TEST_YII_VERSION: "master"
      run: |
        git clone https://github.com/yiisoft/yii-dev-tool _host-volumes/yii-dev-tool
        pushd _host-volumes/yii-dev-tool && git checkout ${TEST_YII_VERSION} && popd
        cp .env-dist .env
    - name: Print Info
      run: |
        pwd
        docker version
        docker info
        docker-compose version
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build Image
      run: docker buildx bake -f ./docker-compose.yml
      #run: docker-compose build --build-arg X_LEGACY_GD_LIB=$X_LEGACY_GD_LIB
    - name: Test PHP version and Xdebug only loaded by ENV
      run: |
        docker-compose run --rm php-min php -v -- | grep "Xdebug" && exit 5
        docker-compose run --rm -e PHP_ENABLE_XDEBUG=1 php-dev php -v -- | grep "Xdebug"
    - name: Test Yii requirements
      run: |
        docker-compose run --rm php-min php /tests/requirements.php
        docker-compose run --rm php-dev php /tests/requirements.php
    - name: Test installation & framework
      run: |
          docker-compose run --rm -w /yii-dev-tool php-dev composer install
          docker images
    #- name: Login to Docker
    #  if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
    #  uses: docker/login-action@v1
    #  with:
    #    username: ${{ secrets.DOCKERHUB_USER }}
    #    password: ${{ secrets.DOCKERHUB_PASS }}
    #- name: Push docker image
    #  if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
    #  run: docker-compose push
